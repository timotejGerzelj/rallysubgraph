// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class handleAudioChatChangedState extends ethereum.Event {
  get params(): handleAudioChatChangedState__Params {
    return new handleAudioChatChangedState__Params(this);
  }
}

export class handleAudioChatChangedState__Params {
  _event: handleAudioChatChangedState;

  constructor(event: handleAudioChatChangedState) {
    this._event = event;
  }

  get audio_event_id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get new_state(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class handleAudioChatDeleted extends ethereum.Event {
  get params(): handleAudioChatDeleted__Params {
    return new handleAudioChatDeleted__Params(this);
  }
}

export class handleAudioChatDeleted__Params {
  _event: handleAudioChatDeleted;

  constructor(event: handleAudioChatDeleted) {
    this._event = event;
  }

  get audio_event_id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class handleAudioChatUpdated extends ethereum.Event {
  get params(): handleAudioChatUpdated__Params {
    return new handleAudioChatUpdated__Params(this);
  }
}

export class handleAudioChatUpdated__Params {
  _event: handleAudioChatUpdated;

  constructor(event: handleAudioChatUpdated) {
    this._event = event;
  }

  get audio_event_id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get start_at(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get created_at(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get cid_metadata(): string {
    return this._event.parameters[3].value.toString();
  }

  get current_state(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get is_indexed(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }

  get recording_arweave_transaction_id(): string {
    return this._event.parameters[6].value.toString();
  }

  get lens_publication_id(): string {
    return this._event.parameters[7].value.toString();
  }
}

export class handleNewAudioChat extends ethereum.Event {
  get params(): handleNewAudioChat__Params {
    return new handleNewAudioChat__Params(this);
  }
}

export class handleNewAudioChat__Params {
  _event: handleNewAudioChat;

  constructor(event: handleNewAudioChat) {
    this._event = event;
  }

  get audio_event_id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get start_at(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get created_at(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get cid_metadata(): string {
    return this._event.parameters[3].value.toString();
  }

  get current_state(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get is_indexed(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }

  get creator(): Address {
    return this._event.parameters[6].value.toAddress();
  }
}

export class handleUpdateMetadataCID extends ethereum.Event {
  get params(): handleUpdateMetadataCID__Params {
    return new handleUpdateMetadataCID__Params(this);
  }
}

export class handleUpdateMetadataCID__Params {
  _event: handleUpdateMetadataCID;

  constructor(event: handleUpdateMetadataCID) {
    this._event = event;
  }

  get audio_event_id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get new_cid(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class RallyContract__getAllAudioChatsResultValue0Struct extends ethereum.Tuple {
  get audio_event_id(): Bytes {
    return this[0].toBytes();
  }

  get created_at(): BigInt {
    return this[1].toBigInt();
  }

  get cid_metadata(): string {
    return this[2].toString();
  }

  get state(): i32 {
    return this[3].toI32();
  }

  get is_indexed(): boolean {
    return this[4].toBoolean();
  }

  get creator(): Address {
    return this[5].toAddress();
  }

  get start_at(): BigInt {
    return this[6].toBigInt();
  }

  get exists(): boolean {
    return this[7].toBoolean();
  }

  get recording_arweave_transaction_id(): string {
    return this[8].toString();
  }

  get lens_publication_id(): string {
    return this[9].toString();
  }
}

export class RallyContract__getAllRecordingsByWalletAddressResultValue0Struct extends ethereum.Tuple {
  get audio_event_id(): Bytes {
    return this[0].toBytes();
  }

  get created_at(): BigInt {
    return this[1].toBigInt();
  }

  get cid_metadata(): string {
    return this[2].toString();
  }

  get state(): i32 {
    return this[3].toI32();
  }

  get is_indexed(): boolean {
    return this[4].toBoolean();
  }

  get creator(): Address {
    return this[5].toAddress();
  }

  get start_at(): BigInt {
    return this[6].toBigInt();
  }

  get exists(): boolean {
    return this[7].toBoolean();
  }

  get recording_arweave_transaction_id(): string {
    return this[8].toString();
  }

  get lens_publication_id(): string {
    return this[9].toString();
  }
}

export class RallyContract__getAudioChatByIdResult {
  value0: Bytes;
  value1: BigInt;
  value2: BigInt;
  value3: string;
  value4: i32;
  value5: Address;
  value6: boolean;
  value7: string;
  value8: string;

  constructor(
    value0: Bytes,
    value1: BigInt,
    value2: BigInt,
    value3: string,
    value4: i32,
    value5: Address,
    value6: boolean,
    value7: string,
    value8: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    map.set("value7", ethereum.Value.fromString(this.value7));
    map.set("value8", ethereum.Value.fromString(this.value8));
    return map;
  }

  getAudio_event_id(): Bytes {
    return this.value0;
  }

  getCreated_at(): BigInt {
    return this.value1;
  }

  getStart_at(): BigInt {
    return this.value2;
  }

  getCid_metadata(): string {
    return this.value3;
  }

  getState(): i32 {
    return this.value4;
  }

  getCreator(): Address {
    return this.value5;
  }

  getIs_indexed(): boolean {
    return this.value6;
  }

  getRecording_arweave_transaction_id(): string {
    return this.value7;
  }

  getLens_publication_id(): string {
    return this.value8;
  }
}

export class RallyContract__getAudioChatsByAddressResultValue0Struct extends ethereum.Tuple {
  get audio_event_id(): Bytes {
    return this[0].toBytes();
  }

  get created_at(): BigInt {
    return this[1].toBigInt();
  }

  get cid_metadata(): string {
    return this[2].toString();
  }

  get state(): i32 {
    return this[3].toI32();
  }

  get is_indexed(): boolean {
    return this[4].toBoolean();
  }

  get creator(): Address {
    return this[5].toAddress();
  }

  get start_at(): BigInt {
    return this[6].toBigInt();
  }

  get exists(): boolean {
    return this[7].toBoolean();
  }

  get recording_arweave_transaction_id(): string {
    return this[8].toString();
  }

  get lens_publication_id(): string {
    return this[9].toString();
  }
}

export class RallyContract__getAudioChatsByStateResultValue0Struct extends ethereum.Tuple {
  get audio_event_id(): Bytes {
    return this[0].toBytes();
  }

  get created_at(): BigInt {
    return this[1].toBigInt();
  }

  get cid_metadata(): string {
    return this[2].toString();
  }

  get state(): i32 {
    return this[3].toI32();
  }

  get is_indexed(): boolean {
    return this[4].toBoolean();
  }

  get creator(): Address {
    return this[5].toAddress();
  }

  get start_at(): BigInt {
    return this[6].toBigInt();
  }

  get exists(): boolean {
    return this[7].toBoolean();
  }

  get recording_arweave_transaction_id(): string {
    return this[8].toString();
  }

  get lens_publication_id(): string {
    return this[9].toString();
  }
}

export class RallyContract__id_to_audio_chatResult {
  value0: Bytes;
  value1: BigInt;
  value2: string;
  value3: i32;
  value4: boolean;
  value5: Address;
  value6: BigInt;
  value7: boolean;
  value8: string;
  value9: string;

  constructor(
    value0: Bytes,
    value1: BigInt,
    value2: string,
    value3: i32,
    value4: boolean,
    value5: Address,
    value6: BigInt,
    value7: boolean,
    value8: string,
    value9: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    map.set("value8", ethereum.Value.fromString(this.value8));
    map.set("value9", ethereum.Value.fromString(this.value9));
    return map;
  }

  getAudio_event_id(): Bytes {
    return this.value0;
  }

  getCreated_at(): BigInt {
    return this.value1;
  }

  getCid_metadata(): string {
    return this.value2;
  }

  getState(): i32 {
    return this.value3;
  }

  getIs_indexed(): boolean {
    return this.value4;
  }

  getCreator(): Address {
    return this.value5;
  }

  getStart_at(): BigInt {
    return this.value6;
  }

  getExists(): boolean {
    return this.value7;
  }

  getRecording_arweave_transaction_id(): string {
    return this.value8;
  }

  getLens_publication_id(): string {
    return this.value9;
  }
}

export class RallyContract extends ethereum.SmartContract {
  static bind(address: Address): RallyContract {
    return new RallyContract("RallyContract", address);
  }

  address_to_audio_chat(param0: Address, param1: BigInt): Bytes {
    let result = super.call(
      "address_to_audio_chat",
      "address_to_audio_chat(address,uint256):(bytes32)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBytes();
  }

  try_address_to_audio_chat(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "address_to_audio_chat",
      "address_to_audio_chat(address,uint256):(bytes32)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getAllAudioChats(): Array<RallyContract__getAllAudioChatsResultValue0Struct> {
    let result = super.call(
      "getAllAudioChats",
      "getAllAudioChats():((bytes32,uint256,string,uint8,bool,address,uint256,bool,string,string)[])",
      []
    );

    return result[0].toTupleArray<
      RallyContract__getAllAudioChatsResultValue0Struct
    >();
  }

  try_getAllAudioChats(): ethereum.CallResult<
    Array<RallyContract__getAllAudioChatsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllAudioChats",
      "getAllAudioChats():((bytes32,uint256,string,uint8,bool,address,uint256,bool,string,string)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<RallyContract__getAllAudioChatsResultValue0Struct>()
    );
  }

  getAllOwnedIds(): Array<Bytes> {
    let result = super.call(
      "getAllOwnedIds",
      "getAllOwnedIds():(bytes32[])",
      []
    );

    return result[0].toBytesArray();
  }

  try_getAllOwnedIds(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getAllOwnedIds",
      "getAllOwnedIds():(bytes32[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  getAllRecordingsByWalletAddress(
    creator: Address
  ): Array<RallyContract__getAllRecordingsByWalletAddressResultValue0Struct> {
    let result = super.call(
      "getAllRecordingsByWalletAddress",
      "getAllRecordingsByWalletAddress(address):((bytes32,uint256,string,uint8,bool,address,uint256,bool,string,string)[])",
      [ethereum.Value.fromAddress(creator)]
    );

    return result[0].toTupleArray<
      RallyContract__getAllRecordingsByWalletAddressResultValue0Struct
    >();
  }

  try_getAllRecordingsByWalletAddress(
    creator: Address
  ): ethereum.CallResult<
    Array<RallyContract__getAllRecordingsByWalletAddressResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllRecordingsByWalletAddress",
      "getAllRecordingsByWalletAddress(address):((bytes32,uint256,string,uint8,bool,address,uint256,bool,string,string)[])",
      [ethereum.Value.fromAddress(creator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        RallyContract__getAllRecordingsByWalletAddressResultValue0Struct
      >()
    );
  }

  getAudioChatById(audio_id: Bytes): RallyContract__getAudioChatByIdResult {
    let result = super.call(
      "getAudioChatById",
      "getAudioChatById(bytes32):(bytes32,uint256,uint256,string,uint8,address,bool,string,string)",
      [ethereum.Value.fromFixedBytes(audio_id)]
    );

    return new RallyContract__getAudioChatByIdResult(
      result[0].toBytes(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toString(),
      result[4].toI32(),
      result[5].toAddress(),
      result[6].toBoolean(),
      result[7].toString(),
      result[8].toString()
    );
  }

  try_getAudioChatById(
    audio_id: Bytes
  ): ethereum.CallResult<RallyContract__getAudioChatByIdResult> {
    let result = super.tryCall(
      "getAudioChatById",
      "getAudioChatById(bytes32):(bytes32,uint256,uint256,string,uint8,address,bool,string,string)",
      [ethereum.Value.fromFixedBytes(audio_id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RallyContract__getAudioChatByIdResult(
        value[0].toBytes(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toString(),
        value[4].toI32(),
        value[5].toAddress(),
        value[6].toBoolean(),
        value[7].toString(),
        value[8].toString()
      )
    );
  }

  getAudioChatsByAddress(
    creator: Address
  ): Array<RallyContract__getAudioChatsByAddressResultValue0Struct> {
    let result = super.call(
      "getAudioChatsByAddress",
      "getAudioChatsByAddress(address):((bytes32,uint256,string,uint8,bool,address,uint256,bool,string,string)[])",
      [ethereum.Value.fromAddress(creator)]
    );

    return result[0].toTupleArray<
      RallyContract__getAudioChatsByAddressResultValue0Struct
    >();
  }

  try_getAudioChatsByAddress(
    creator: Address
  ): ethereum.CallResult<
    Array<RallyContract__getAudioChatsByAddressResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAudioChatsByAddress",
      "getAudioChatsByAddress(address):((bytes32,uint256,string,uint8,bool,address,uint256,bool,string,string)[])",
      [ethereum.Value.fromAddress(creator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        RallyContract__getAudioChatsByAddressResultValue0Struct
      >()
    );
  }

  getAudioChatsByState(
    options: Array<i32>
  ): Array<RallyContract__getAudioChatsByStateResultValue0Struct> {
    let result = super.call(
      "getAudioChatsByState",
      "getAudioChatsByState(uint8[]):((bytes32,uint256,string,uint8,bool,address,uint256,bool,string,string)[])",
      [ethereum.Value.fromI32Array(options)]
    );

    return result[0].toTupleArray<
      RallyContract__getAudioChatsByStateResultValue0Struct
    >();
  }

  try_getAudioChatsByState(
    options: Array<i32>
  ): ethereum.CallResult<
    Array<RallyContract__getAudioChatsByStateResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAudioChatsByState",
      "getAudioChatsByState(uint8[]):((bytes32,uint256,string,uint8,bool,address,uint256,bool,string,string)[])",
      [ethereum.Value.fromI32Array(options)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        RallyContract__getAudioChatsByStateResultValue0Struct
      >()
    );
  }

  id_to_audio_chat(param0: Bytes): RallyContract__id_to_audio_chatResult {
    let result = super.call(
      "id_to_audio_chat",
      "id_to_audio_chat(bytes32):(bytes32,uint256,string,uint8,bool,address,uint256,bool,string,string)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new RallyContract__id_to_audio_chatResult(
      result[0].toBytes(),
      result[1].toBigInt(),
      result[2].toString(),
      result[3].toI32(),
      result[4].toBoolean(),
      result[5].toAddress(),
      result[6].toBigInt(),
      result[7].toBoolean(),
      result[8].toString(),
      result[9].toString()
    );
  }

  try_id_to_audio_chat(
    param0: Bytes
  ): ethereum.CallResult<RallyContract__id_to_audio_chatResult> {
    let result = super.tryCall(
      "id_to_audio_chat",
      "id_to_audio_chat(bytes32):(bytes32,uint256,string,uint8,bool,address,uint256,bool,string,string)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RallyContract__id_to_audio_chatResult(
        value[0].toBytes(),
        value[1].toBigInt(),
        value[2].toString(),
        value[3].toI32(),
        value[4].toBoolean(),
        value[5].toAddress(),
        value[6].toBigInt(),
        value[7].toBoolean(),
        value[8].toString(),
        value[9].toString()
      )
    );
  }
}

export class ChangeStateCall extends ethereum.Call {
  get inputs(): ChangeStateCall__Inputs {
    return new ChangeStateCall__Inputs(this);
  }

  get outputs(): ChangeStateCall__Outputs {
    return new ChangeStateCall__Outputs(this);
  }
}

export class ChangeStateCall__Inputs {
  _call: ChangeStateCall;

  constructor(call: ChangeStateCall) {
    this._call = call;
  }

  get new_changed_state(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get audio_chat_id(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ChangeStateCall__Outputs {
  _call: ChangeStateCall;

  constructor(call: ChangeStateCall) {
    this._call = call;
  }
}

export class CreateNewAudioChatCall extends ethereum.Call {
  get inputs(): CreateNewAudioChatCall__Inputs {
    return new CreateNewAudioChatCall__Inputs(this);
  }

  get outputs(): CreateNewAudioChatCall__Outputs {
    return new CreateNewAudioChatCall__Outputs(this);
  }
}

export class CreateNewAudioChatCall__Inputs {
  _call: CreateNewAudioChatCall;

  constructor(call: CreateNewAudioChatCall) {
    this._call = call;
  }

  get start_at(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get created_at(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get cid_metadata(): string {
    return this._call.inputValues[2].value.toString();
  }

  get creator(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get is_indexed(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }

  get published_recording_access_control_arweave_transaction_id(): string {
    return this._call.inputValues[5].value.toString();
  }

  get lens_publication_id(): string {
    return this._call.inputValues[6].value.toString();
  }
}

export class CreateNewAudioChatCall__Outputs {
  _call: CreateNewAudioChatCall;

  constructor(call: CreateNewAudioChatCall) {
    this._call = call;
  }
}

export class DeleteAudioChatCall extends ethereum.Call {
  get inputs(): DeleteAudioChatCall__Inputs {
    return new DeleteAudioChatCall__Inputs(this);
  }

  get outputs(): DeleteAudioChatCall__Outputs {
    return new DeleteAudioChatCall__Outputs(this);
  }
}

export class DeleteAudioChatCall__Inputs {
  _call: DeleteAudioChatCall;

  constructor(call: DeleteAudioChatCall) {
    this._call = call;
  }

  get audio_chat_id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DeleteAudioChatCall__Outputs {
  _call: DeleteAudioChatCall;

  constructor(call: DeleteAudioChatCall) {
    this._call = call;
  }
}

export class UpdateAudioChatCall extends ethereum.Call {
  get inputs(): UpdateAudioChatCall__Inputs {
    return new UpdateAudioChatCall__Inputs(this);
  }

  get outputs(): UpdateAudioChatCall__Outputs {
    return new UpdateAudioChatCall__Outputs(this);
  }
}

export class UpdateAudioChatCall__Inputs {
  _call: UpdateAudioChatCall;

  constructor(call: UpdateAudioChatCall) {
    this._call = call;
  }

  get audio_event_id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get new_cid(): string {
    return this._call.inputValues[1].value.toString();
  }

  get start_at(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get is_indexed(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get recording_arweave_transaction_id(): string {
    return this._call.inputValues[4].value.toString();
  }

  get lens_publication_id(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class UpdateAudioChatCall__Outputs {
  _call: UpdateAudioChatCall;

  constructor(call: UpdateAudioChatCall) {
    this._call = call;
  }
}
